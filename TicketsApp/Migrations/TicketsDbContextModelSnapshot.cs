// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketsApp.Data;

namespace TicketsApp.Migrations
{
    [DbContext(typeof(TicketsDbContext))]
    partial class TicketsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TicketsApp.Data.Models.Segment", b =>
                {
                    b.Property<int>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("AirlineCode")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ArriveDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ArrivePlace")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTimeOffset>("DepartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartPlace")
                        .HasColumnType("text");

                    b.Property<long>("DocNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("DocType")
                        .HasColumnType("integer");

                    b.Property<int>("FlightNum")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OperationPlace")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("OperationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OperationType")
                        .HasColumnType("text");

                    b.Property<string>("PassengerType")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("PnrId")
                        .HasColumnType("text");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<long>("TicketNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketType")
                        .HasColumnType("integer");

                    b.HasKey("SegmentId");

                    b.HasIndex("TicketNumber", "SerialNumber")
                        .IsUnique();

                    b.ToTable("Segments");
                });
#pragma warning restore 612, 618
        }
    }
}
